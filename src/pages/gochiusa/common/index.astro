---
import DocLayout from "../../../layout/DocLayout.astro";
import {Code} from '@astrojs/starlight/components';

const exampleCode = `
  import * as PIXI from 'pixi.js';

  async function initPixi() {
    // init pixi app and move it to the center of the screen
    const app = new PIXI.Application();
    await app.init({antialias: true, resizeTo: {width: 800, height: 600}} as any);
    const pixiContainer = document.getElementById('pixi-container');
    pixiContainer!.style.display = 'flex';
    pixiContainer!.style.justifyContent = 'center';
    pixiContainer!.appendChild(app.canvas);

    const triangle = new PIXI.Graphics();
    triangle.fill(0xFFFFFF)
      .stroke()
      .moveTo(-0.7, -27.8)
      .lineTo(32, 27.1)
      .lineTo(-32, 27.8)
      .closePath()
      .fill()
      .setTransform(0, -7);

    const star_10 = new PIXI.Graphics();
    star_10.fill(0xFFFFFF)
      .stroke()
      .moveTo(-4.3, 18.3)
      .lineTo(-19.9, 29.3)
      .lineTo(-14.1, 10.3)
      .lineTo(-32, 10.3)
      .lineTo(-19.7, 0.7)
      .lineTo(-31.2, -8.7)
      .lineTo(-15.2, -8.8)
      .lineTo(-21.7, -26.4)
      .lineTo(-5.4, -16.4)
      .lineTo(-0.2, -31.8)
      .lineTo(4.4, -17.6)
      .lineTo(17.8, -27.4)
      .lineTo(13.1, -8.5)
      .lineTo(30.3, -8.1)
      .lineTo(19.9, 0.1)
      .lineTo(32, 8.4)
      .lineTo(12.8, 9.5)
      .lineTo(18.2, 29.8)
      .lineTo(4.9, 20)
      .lineTo(1.4, 31.8)
      .fill()
      .closePath();

    const star = new PIXI.Graphics();
    star.fill(0xFFFFFF)
      .stroke()
      .moveTo(-0.2, 17.3)
      .lineTo(-20.2, 31.5)
      .lineTo(-13, 7.4)
      .lineTo(-32, -8)
      .lineTo(-7.8, -8.4)
      .lineTo(0.3, -32)
      .lineTo(8, -8.2)
      .lineTo(32, -7.4)
      .lineTo(12.8, 7.5)
      .lineTo(19.4, 32)
      .fill()
      .closePath();

    const square = new PIXI.Graphics();
    square.fill()
      .stroke("#FFFFFF")
      .setStrokeStyle(8)
      .moveTo(-32, -32)
      .lineTo(32, -32)
      .lineTo(32, 32)
      .lineTo(-32, 32)
      .fill()
      .closePath();

    const reverse_blur_circle = new PIXI.Graphics();
    reverse_blur_circle.fill(0xFFFFFF)
      .stroke(0xFFFFFF)
      .setStrokeStyle(8)
      .moveTo(32, 0)
      .quadraticCurveTo(32, 13.2, 22.6, 22.6)
      .quadraticCurveTo(13.3, 32, 0, 32)
      .quadraticCurveTo(-13.2, 32, -22.7, 22.6)
      .quadraticCurveTo(-32, 13.2, -32, 0)
      .quadraticCurveTo(-32, -13.3, -22.7, -22.7)
      .quadraticCurveTo(-13.2, -32, 0, -32)
      .quadraticCurveTo(13.3, -32, 22.6, -22.7)
      .quadraticCurveTo(32, -13.3, 32, 0)
      .fill()
      .closePath();

    const kirakira2 = new PIXI.Graphics();
    kirakira2.fill(0xFFFFFF)
      .stroke()
      .setStrokeStyle(8)
      .moveTo(-4, 9.5)
      .quadraticCurveTo(-7.8, 0, -13.4, -0.1)
      .quadraticCurveTo(-7.8, -0.2, -4, -9.9)
      .quadraticCurveTo(-0.1, -19.2, 0, -32)
      .quadraticCurveTo(0.1, -19.2, 4, -9.9)
      .quadraticCurveTo(8, -0.2, 13.4, -0.1)
      .quadraticCurveTo(8, 0, 4, 9.5)
      .quadraticCurveTo(0.1, 19, 0, 32)
      .quadraticCurveTo(-0.1, 19, -4, 9.5)
      .fill()
      .closePath();

    const kirakira = new PIXI.Graphics();
    kirakira.fill(0xFFFFFF)
      .stroke()
      .moveTo(-9.6, 9.3)
      .quadraticCurveTo(-18.9, 0, -32, -0.1)
      .quadraticCurveTo(-18.9, -0.2, -9.6, -9.6)
      .quadraticCurveTo(-0.2, -19, -0.1, -32)
      .quadraticCurveTo(0, -19, 9.4, -9.6)
      .quadraticCurveTo(18.9, -0.2, 32, -0.1)
      .quadraticCurveTo(18.9, 0, 9.4, 9.3)
      .quadraticCurveTo(0, 18.8, -0.1, 32)
      .quadraticCurveTo(-0.2, 18.8, -9.6, 9.3)
      .fill()
      .closePath();

    const heart = new PIXI.Graphics();
    heart.fill(0xFFFFFF)
      .stroke()
      .moveTo(-20.2, 10)
      .lineTo(-24.8, 3.5)
      .quadraticCurveTo(-27, 0.1, -28.5, -3.1)
      .quadraticCurveTo(-30.1, -6.4, -31.1, -9.5)
      .quadraticCurveTo(-32, -13, -32, -16)
      .quadraticCurveTo(-32, -19.7, -30.4, -22.7)
      .quadraticCurveTo(-29.1, -25.4, -26.6, -27.4)
      .quadraticCurveTo(-24, -29.1, -21, -30.1)
      .quadraticCurveTo(-18.1, -31.1, -15, -31.1)
      .quadraticCurveTo(-11.7, -31.1, -8.8, -29.9)
      .quadraticCurveTo(-6.4, -29, -4.5, -27.4)
      .quadraticCurveTo(-3, -25.9, -1.7, -23.9)
      .lineTo(0, -20.8)
      .lineTo(1.7, -23.9)
      .quadraticCurveTo(3, -25.9, 4.5, -27.4)
      .quadraticCurveTo(6.6, -29.1, 8.8, -29.9)
      .quadraticCurveTo(11.7, -31.1, 15.2, -31.1)
      .quadraticCurveTo(18.4, -31.1, 21.3, -30.1)
      .quadraticCurveTo(24.2, -29.1, 26.7, -27.2)
      .quadraticCurveTo(29.1, -25.3, 30.5, -22.6)
      .quadraticCurveTo(32, -19.7, 32, -16.1)
      .quadraticCurveTo(32, -13.3, 31, -9.7)
      .quadraticCurveTo(30.2, -6.5, 28.5, -3.2)
      .quadraticCurveTo(27.1, 0, 24.9, 3.3)
      .lineTo(20.3, 9.7)
      .quadraticCurveTo(13.4, 17.7, 9.7, 21.6)
      .lineTo(0, 31)
      .quadraticCurveTo(-13.6, 18.3, -20.2, 10)
      .fill()
      .closePath();

    const flower = new PIXI.Graphics();
    flower.fill(0xFFFFFF)
      .stroke()
      .moveTo(4, 27.3)
      .quadraticCurveTo(0.5, 23.7, 0.5, 18.9)
      .lineTo(0.5, 15.2)
      .lineTo(-0.5, 15.2)
      .lineTo(-0.7, 18.9)
      .quadraticCurveTo(-0.9, 24, -4.1, 27.6)
      .quadraticCurveTo(-7.4, 31.1, -12.1, 31.1)
      .quadraticCurveTo(-17, 31.1, -20.8, 27.5)
      .quadraticCurveTo(-24.7, 23.7, -24.7, 19.1)
      .quadraticCurveTo(-24.7, 15.3, -22.2, 12.1)
      .quadraticCurveTo(-19.7, 8.8, -16.1, 7.7)
      .lineTo(-12.5, 6.4)
      .lineTo(-12.7, 5.8)
      .lineTo(-13, 5.4)
      .lineTo(-16.5, 6.6)
      .lineTo(-20.2, 7.1)
      .quadraticCurveTo(-25.3, 7.1, -28.7, 4)
      .quadraticCurveTo(-32, 0.7, -32, -4.1)
      .quadraticCurveTo(-32, -9.4, -28.7, -13)
      .quadraticCurveTo(-25.5, -16.8, -20.6, -16.8)
      .quadraticCurveTo(-17.8, -16.8, -15, -15.4)
      .quadraticCurveTo(-12.2, -14, -10.5, -11.6)
      .lineTo(-8.4, -8.7)
      .lineTo(-8, -8.8)
      .lineTo(-7.4, -9.3)
      .lineTo(-9.6, -12.2)
      .quadraticCurveTo(-10.7, -14, -11.3, -15.8)
      .quadraticCurveTo(-11.9, -17.9, -12, -19.9)
      .quadraticCurveTo(-12, -24.7, -8.5, -28)
      .quadraticCurveTo(-5.3, -31.1, -0.1, -31.1)
      .quadraticCurveTo(5.2, -31.1, 8.5, -28)
      .quadraticCurveTo(11.7, -24.7, 11.8, -19.9)
      .quadraticCurveTo(11.7, -17.7, 11.2, -15.7)
      .quadraticCurveTo(10.7, -13.8, 9.5, -12.2)
      .lineTo(7.4, -9.3)
      .lineTo(7.8, -9)
      .lineTo(8.2, -8.7)
      .lineTo(10.5, -11.6)
      .quadraticCurveTo(12.2, -14, 14.8, -15.4)
      .quadraticCurveTo(17.6, -16.8, 20.4, -16.8)
      .quadraticCurveTo(25.3, -16.8, 28.5, -13)
      .quadraticCurveTo(32, -9.4, 32, -4.1)
      .quadraticCurveTo(32, 0.8, 28.5, 4)
      .quadraticCurveTo(25.3, 7.1, 20, 7.1)
      .lineTo(16.4, 6.6)
      .lineTo(12.9, 5.5)
      .quadraticCurveTo(12.8, 5.6, 12.8, 5.6)
      .quadraticCurveTo(12.7, 5.7, 12.7, 5.7)
      .quadraticCurveTo(12.7, 5.8, 12.7, 5.8)
      .quadraticCurveTo(12.7, 5.9, 12.7, 6)
      .lineTo(12.5, 6.4)
      .lineTo(15.9, 7.7)
      .quadraticCurveTo(19.7, 9.1, 22.1, 12.2)
      .quadraticCurveTo(24.5, 15.3, 24.5, 19.1)
      .quadraticCurveTo(24.5, 23.7, 20.8, 27.5)
      .quadraticCurveTo(16.9, 31.1, 11.9, 31.1)
      .quadraticCurveTo(7.4, 31.1, 4, 27.3)
      .closePath()
      .moveTo(-7.7, -5.9)
      .quadraticCurveTo(-10.9, -2.7, -10.9, 1.8)
      .quadraticCurveTo(-10.9, 6.3, -7.7, 9.4)
      .quadraticCurveTo(-4.6, 12.5, -0.1, 12.5)
      .quadraticCurveTo(4.4, 12.5, 7.6, 9.4)
      .quadraticCurveTo(10.6, 6.3, 10.6, 1.8)
      .quadraticCurveTo(10.6, -2.7, 7.6, -5.9)
      .quadraticCurveTo(4.4, -9, -0.1, -9)
      .quadraticCurveTo(-4.6, -9, -7.7, -5.9)
      .fill()
      .closePath();

    const circle = new PIXI.Graphics();
    circle.fill(0xFFFFFF)
      .stroke()
      .ellipse(-10.8, -10.8, 21.7, 21.7)
      .setTransform(0, 0, 2.949, 2.949)
      .fill()
      .closePath();

    const blur_circle = new PIXI.Graphics();
    blur_circle.fill(0xFFFFFF)
      .stroke(0xFFFFFF)
      .setStrokeStyle(8)
      .ellipse(-10.8, -10.8, 21.7, 21.7)
      .setTransform(0, 0, 3, 3)
      .fill()
      .closePath();

    const sakura1 = new PIXI.Graphics();
    sakura1.fill(0xFFFFFF)
      .moveTo(26.4,13.9)
      .bezierCurveTo(26.5,11.8,26.3,9.5,25.7,7)
      .bezierCurveTo(24.6,1.7,22.5,1.3,21.1,0.6)
      .bezierCurveTo(19.1,-0.5,16.9,-0.3,15.6,1.6)
      .bezierCurveTo(11.7,7.3,11.7,15.9,12.9,22.6)
      .bezierCurveTo(13.3,25.3,13.4,27.7,13.2,29.7)
      .bezierCurveTo(12.8,30,12.4,30.4,12,30.7)
      .bezierCurveTo(7,34.8,2.7,37.2,2.7,37.2)
      .bezierCurveTo(2.7,37.2,-2.1,41.5,1,41.2)
      .bezierCurveTo(2.6,41.1,5.1,41.9,7.9,42)
      .bezierCurveTo(10.7,42.1,13.7,41.6,16.3,39)
      .bezierCurveTo(18.9,36.4,21.6,32,23.7,27.3)
      .bezierCurveTo(25.6,22.8,26.8,18.1,26.4,13.9)
      .fill()
      .closePath();

    const sakura2 = new PIXI.Graphics();
    sakura2.fill(0xFFFFFF)
      .moveTo(2.2,39.4)
      .bezierCurveTo(5.8,39.8,10.6,36.3,13.2,34.1)
      .bezierCurveTo(17.6,30.2,21.9,26.2,26.6,22.5)
      .bezierCurveTo(33.6,16.9,32.8,6.7,29,3.1)
      .bezierCurveTo(21.7,-3.7,9.8,2.1,5,8.9)
      .bezierCurveTo(1.6,13.7,0.01,19.5,0,25.3)
      .bezierCurveTo(0,26.7,0.4,39.2,2.2,39.4)
      .fill()
      .closePath();

    const sakura3 = new PIXI.Graphics();
    sakura3.fill(0xFFFFFF)
      .moveTo(35.3,5.4)
      .bezierCurveTo(35.3,5.3,35.3,5.2,35.3,5.2)
      .bezierCurveTo(35.3,5.2,35.3,5.1,35.3,5.1)
      .bezierCurveTo(35.3,4.1,35,3.2,34.6,2.5)
      .bezierCurveTo(34.6,2.4,34.5,2.4,34.5,2.3)
      .bezierCurveTo(34.5,2.3,34.5,2.3,34.5,2.3)
      .bezierCurveTo(33.9,1.4,33.1,0.7,32.2,0.4)
      .bezierCurveTo(26.9,-1.7,19.8,3.8,16.6,7.5)
      .bezierCurveTo(10.7,14.4,9.3,22.8,5.9,31)
      .bezierCurveTo(3.7,36.2,0.3,40.8,0.3,40.8)
      .bezierCurveTo(-1.2,42.4,2.3,41.8,7,38.1)
      .bezierCurveTo(9,36.6,12.5,33.7,16.2,30.7)
      .bezierCurveTo(20.1,27.5,24.1,24.1,26.1,21.9)
      .bezierCurveTo(30.3,17.5,32.9,13.8,34.3,10.6)
      .bezierCurveTo(35.1,8.7,35.4,7,35.3,5.4)
      .fill()
      .closePath();

    const sakura4 = new PIXI.Graphics();
    sakura4.fill(0xFFFFFF)
      .moveTo(4.4,0.9)
      .bezierCurveTo(9.4,3,13.6,4.2,16.8,6.8)
      .bezierCurveTo(28.9,17,26.9,22.7,25.1,25.9)
      .bezierCurveTo(22.8,29.9,7.9,31,4.2,16.5)
      .bezierCurveTo(3.3,13,2.7,8.6,0.5,3.1)
      .bezierCurveTo(-1.2,-1.1,1.8,-0.2,4.4,0.9)
      .fill()
      .closePath();

    const sakura5 = new PIXI.Graphics();
    sakura5.fill(0xFFFFFF)
      .moveTo(52.9,2.7)
      .bezierCurveTo(50.9,-1,44.7,0.2,41.4,0.4)
      .bezierCurveTo(36.9,0.7,31.4,1.3,26.2,1.9)
      .bezierCurveTo(21,2.4,14.5,2.6,9.2,2.9)
      .lineTo(0,3.3)
      .bezierCurveTo(4.7,8.8,9.6,12.2,14.7,14.3)
      .bezierCurveTo(19.8,16.4,25,17.1,30,16.9)
      .bezierCurveTo(35,16.7,39.9,15.6,43.9,14)
      .bezierCurveTo(47.3,12.6,50.2,10.9,52.2,8.9)
      .bezierCurveTo(54,7.9,54.8,6.1,52.9,2.7)
      .fill()
      .closePath();

    const sakura6 = new PIXI.Graphics();
    sakura6.fill(0xFFFFFF)
      .moveTo(1.2,0)
      .bezierCurveTo(4.5,0,12.8,0.4,21,2.4)
      .bezierCurveTo(28.2,4.1,41,8,40.1,17.6)
      .bezierCurveTo(40.1,17.9,40,18.1,39.8,18.3)
      .bezierCurveTo(39.6,18.4,39.4,18.4,39.3,18.4)
      .bezierCurveTo(37.6,18.4,36.4,19.1,34.7,18.5)
      .bezierCurveTo(30.2,16.8,24.9,13.1,19.5,9.9)
      .bezierCurveTo(14.1,6.6,8.7,3.7,4.8,2.9)
      .bezierCurveTo(-3.1,1.5,1.2,0,1.2,0)
      .fill()
      .closePath();

    const sakura7 = new PIXI.Graphics();
    sakura7.fill(0xFFFFFF)
      .moveTo(3.2,9.7)
      .bezierCurveTo(6.1,12.7,19.8,23.1,31.2,25.2)
      .bezierCurveTo(33.9,25.7,40.8,25.4,43.3,23.4)
      .bezierCurveTo(45.5,21.7,46.2,16.4,45.6,13.7)
      .bezierCurveTo(44.8,10.2,38.5,0.299999999999999,28.6,0)
      .bezierCurveTo(22.2,-0.2,12.2,2.1,9.4,3.3)
      .bezierCurveTo(6.6,4.4,2.8,3.2,1,3.3)
      .bezierCurveTo(-1.5,3.4,1.2,7.7,3.2,9.7)
      .fill()
      .closePath();

    const sakura8 = new PIXI.Graphics();
    sakura8.fill(0xFFFFFF)
      .moveTo(15.5,0)
      .bezierCurveTo(13.5,0.2,10.6,3.9,7.8,8.1)
      .bezierCurveTo(5,12.3,2.3,17,1.1,19.6)
      .bezierCurveTo(-0.0999999999999999,22.3,-0.2,25.7,0.3,28.8)
      .bezierCurveTo(0.8,31.9,1.8,34.8,2.9,36.2)
      .bezierCurveTo(5,38.9,9.9,39,12.8,39.7)
      .bezierCurveTo(17.2,40.7,21.3,36.1,23.5,32.9)
      .bezierCurveTo(26.9,28,26.8,24.6,25.3,19.1)
      .bezierCurveTo(24.3,15.5,23,11.7,21.7,9.40000000000001)
      .bezierCurveTo(19.3,4.9,16.5,-0.1,15.5,0)
      .fill()
      .closePath();

    const sakura9 = new PIXI.Graphics();
    sakura9.fill(0xFFFFFF)
      .moveTo(26.5,22.3)
      .bezierCurveTo(18.6,28.2,10.7,31.9,2.4,27.7)
      .bezierCurveTo(-0.2,26.4,-1,17.5,1.6,14.3)
      .bezierCurveTo(4.2,11.1,7.9,7.9,13.4,6)
      .bezierCurveTo(24.4,2.2,28.5,7.9,33.4,1.7)
      .bezierCurveTo(36.1,-1.8,37.2,0.6,36.7,4.2)
      .bezierCurveTo(36.5,5.9,32,18.2,26.5,22.3)
      .fill()
      .closePath();

    const sakura10 = new PIXI.Graphics();
    sakura10.fill(0xFFFFFF)
      .moveTo(6.9,3.3)
      .bezierCurveTo(3.3,6,0,11.5,0,16.3)
      .bezierCurveTo(0,32.1,8.7,29,20.3,24.6)
      .bezierCurveTo(33,19.8,40.8,22.2,40.8,22.2)
      .bezierCurveTo(40.8,22.2,42.2,21.9,41.5,20.7)
      .bezierCurveTo(41.5,20.7,40.6,17.9,38.9,14.4)
      .bezierCurveTo(34.7,6,29.7,2.6,21.3,0.5)
      .bezierCurveTo(15.8,-0.8,10.4,0.6,6.9,3.3)
      .fill()
      .closePath();

    const sakura11 = new PIXI.Graphics();
    sakura11.fill(0xFFFFFF)
      .moveTo(28.4,24.2)
      .bezierCurveTo(26.4,24.9,28,21,22.1,19.3)
      .bezierCurveTo(18.3,18.2,12.2,20.2,8.5,18.6)
      .bezierCurveTo(3.4,16.2,1,14,0.2,10.1)
      .bezierCurveTo(-0.9,4.3,2.2,1.7,3.8,0.9)
      .bezierCurveTo(6.9,-0.6,11.8,-0.3,15.4,2.2)
      .bezierCurveTo(20.7,5.8,26.4,13.3,28.7,19.5)
      .bezierCurveTo(30.3,23.4,29.3,23.9,28.4,24.2)
      .fill()
      .closePath();

    const sakura12 = new PIXI.Graphics();
    sakura12 .fill(0xFFFFFF)
      .moveTo(8.5,1)
      .bezierCurveTo(11.3,3,14.8,9.9,15.8,12.2)
      .bezierCurveTo(18.6,18.6,19.5,20.4,21.5,22.6)
      .bezierCurveTo(23.5,24.9,20.3,25.8,15.6,22.3)
      .bezierCurveTo(13.2,20.6,10.3,17.9,7.6,15)
      .bezierCurveTo(4.9,12,2.4,8.8,0.7,5.7)
      .bezierCurveTo(-2.5,-0.4,5.7,-1,8.5,1)
      .fill()
      .closePath();

    const sakura13 = new PIXI.Graphics();
    sakura13.fill(0xFFFFFF)
      .moveTo(27.2,29.6)
      .bezierCurveTo(23.7,28.8,18.2,28.1,12.9,25.8)
      .bezierCurveTo(7.7,23.4,2.7,19.5,0.8,13.1)
      .bezierCurveTo(-1.1,6.5,0,0.1,8.3,0)
      .bezierCurveTo(13,-0.1,15.2,0.8,18.6,4.2)
      .bezierCurveTo(22.4,8,26.2,14.1,29,24)
      .bezierCurveTo(29.2,26.1,31,30.4,27.2,29.6)
      .fill()
      .closePath();

    // add shapes to the stage
    // app.stage.addChild(triangle);
    // app.stage.addChild(star_10);
    // app.stage.addChild(star);
    // app.stage.addChild(square);
    // app.stage.addChild(reverse_blur_circle);
    // app.stage.addChild(kirakira2);
    // app.stage.addChild(kirakira);
    // app.stage.addChild(heart);
    // app.stage.addChild(flower);
    // app.stage.addChild(circle);
    // app.stage.addChild(blur_circle);
    // app.stage.addChild(sakura1);
    // app.stage.addChild(sakura2);
    // app.stage.addChild(sakura3);
    // app.stage.addChild(sakura4);
    // app.stage.addChild(sakura5);
    // app.stage.addChild(sakura6);
    // app.stage.addChild(sakura7);
    // app.stage.addChild(sakura8);
    // app.stage.addChild(sakura9);
    // app.stage.addChild(sakura10);
    // app.stage.addChild(sakura11);
    // app.stage.addChild(sakura12);

    const shapes = [sakura1, sakura2, sakura3, sakura4, sakura5, sakura6, sakura7, sakura8, sakura9, sakura10, sakura11, sakura12, sakura13];

    let particleCount = 0;
    const maxParticles = 30;

    const charaColorArray = [
      {h: 330, s: 80, l: 92},
      {h: 47, s: 95, l: 83},
      {h: 104, s: 65, l: 78},
      {h: 353, s: 83, l: 84},
      {h: 218, s: 77, l: 88},
      {h: 196, s: 100, l: 82},
      {h: 253, s: 65, l: 80}
    ];

    const addParticle = () => {
      if (particleCount >= maxParticles) return;

      const shape = shapes[Math.floor(Math.random() * shapes.length)].clone();
      shape.tint = charaColorArray[Math.floor(Math.random() * charaColorArray.length)];
      // shape.tint = Math.random() * 0xFFFFFF;
      // shape.alpha = Math.random();
      shape.x = Math.random() * app.screen.width;
      shape.y = app.screen.height + Math.random() * 100;
      shape.scale.set(Math.random() * 0.5 + 1);
      app.stage.addChild(shape);

      const updateParticle = () => {
        shape.x += Math.random() * 0.25;
        shape.y -= Math.random() * 1.5;
        shape.rotation += 0.02;
        shape.scale.x *= 0.9993 + Math.random() * 0.0004;
        shape.scale.y *= 0.9993 + Math.random() * 0.0004;
        if (shape.x > app.screen.width || shape.y < 0 || shape.scale.x < 0.01) {
          app.stage.removeChild(shape);
          app.ticker.remove(updateParticle);
          particleCount--;
        }
      };

      app.ticker.add(updateParticle);
      particleCount++;
    };

    setInterval(() => {
      if (particleCount < maxParticles) {
        addParticle();
      }
    }, Math.random() * 1000);

    app.start();
  }

  initPixi();
`
---
<DocLayout title="gochiusa">
  <div id="pixi-container" class="w-full"></div>
  <Code code={exampleCode} lang="ts"/>
</DocLayout>

<script>
  import {initParticleGochiusa} from "../../../particles/gochiusa/particle_gochiusa";

  initParticleGochiusa();
</script>